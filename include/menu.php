<?php

/**
* Функция выводит пункты меню в шапке или в подвале страницы, при этом если название
* пункта меню более 15 символов, то название обрезается до 12 символов и в конце
* установливается троеточие
* @param array $array - входной массив с описанием пунктов меню
* @param string $class - имя класса шапки или подвала, чтобы иметь возможность задавать разные стили
* @param $key - ключ, по которому необходимо сортировать массив меню
* @param $sort - направление сортировки массива (по возрастанию - SORT_ASC, по убыванию - SORT_DESC)
*/
function showMenu(array $array, string $class, $key = 'sort', $sort = SORT_ASC)
{
    // Сортировка массива $array в направлении $sort по ключу $key
    $arraySort = arraySort($array, $key, $sort);
    // Подключение файла, в котором выводятся отсортированные пункты меню в шапке
    // или в подвале страницы
    require $_SERVER['DOCUMENT_ROOT'] . '/templates/menu.php';
}

/**
* Функция обрезает строку до указанной длины
* @param $line - входная строка, для обрезания
* @param $length - размер обрезанной строки
* @param $appends - добавка-окончание обрезанной строки
* @return string возвращает результат обработки (строку)
*/
function cutString($line, $length = 15, $appends = '...'): string
{
    // Если количество символов строки меньше или равно $length, то возвращается  
    // строка без изменений, Если количество символов строки больше $length, то 
    // строка обрезается до $length символов, а конец замещается добавкой-
    // окончанием $appends. Всё это работает при условии "$appends <= $length",
    // иначе строка возвращается без изменений
    return mb_strimwidth($line, 0, $length, $appends);
}

/**
* Функция сортирует элементы переданного массива по указанному ключу в указанном направлении
* @param $array - входной массив, для сортировки
* @param $key - ключ элементов этого массива, по которому будет осуществлена сортировка
* @param $sort - направление сортировки по возрастанию/по убыванию (SORT_ASC/SORT_DESC)
* @return array возвращает результат сортировки (массив)
*/
function arraySort(array $array, $key = 'sort', $sort = SORT_ASC): array
{
    // Создание нового одномерного массива, состоящего из значений элементов по ключу $key,
    // взятых из массивов каждого пункта меню (массив из значений одного столбца входного массива)
    $arraylinear = array_column($array, $key);
    // Сортировка созданного одномерного массива в направлении $sort и соответственно 
    // входного многомерного массива в том же направлении по ключу $key 
    array_multisort($arraylinear, $sort, $array);
    return $array;
}

/**
* Функция ищет заголовок текущей страницы в массиве с описанием пунктов меню
* @param array $array - входной массив с описанием пунктов меню
* @return string возвращает заголовок страницы (строку)
*/
function findTitle(array $array): string
{
    // Цикл по всем пунктам меню массива
    foreach ($array as $value) {
        // Если страница найдена (находимся в разделе)
        if (isCurrentUrl($value['path'])) {
            // Возвращаем заголовок страницы
            return $value['title'];
        }
    }
    // Если страница не найдена, то возвращаем ошибку
    return 'Страница не найдена';
}

/**
* Функция определения активности текущей страницы
* @param $path - ссылка на страницу, куда ведет пункт меню, которую необходимо проверить
* @return bool возвращает результат проверки (true / false)
*/
function isCurrentUrl($path): bool
{
    // Возврат результата сравнения
    return $path === parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
}